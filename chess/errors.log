warning: unused import: `core::convert::TryInto`
 --> src/solution.rs:2:5
  |
2 | use core::convert::TryInto;
  |     ^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::any`
 --> src/solution.rs:3:5
  |
3 | use std::any;
  |     ^^^^^^^^

error[E0271]: type mismatch resolving `<&Position as TryFrom<&str>>::Error == solution::Error`
  --> src/main.rs:14:66
   |
14 |             let position = format!("{}{}", column, row).as_str().try_into()?;
   |                                                                  ^^^^^^^^ expected enum `Infallible`, found enum `solution::Error`

error[E0277]: the trait bound `&Position: From<&str>` is not satisfied
  --> src/main.rs:14:66
   |
14 |             let position = format!("{}{}", column, row).as_str().try_into()?;
   |                                                                  ^^^^^^^^ the trait `From<&str>` is not implemented for `&Position`
   |
   = note: required because of the requirements on the impl of `Into<&Position>` for `&str`
   = note: required because of the requirements on the impl of `TryFrom<&str>` for `&Position`
   = note: required because of the requirements on the impl of `TryInto<&Position>` for `&str`

error[E0599]: no method named `current_player` found for reference `&ChessGame` in the current scope
  --> src/main.rs:36:27
   |
36 |     let turn = match game.current_player() {
   |                           ^^^^^^^^^^^^^^ method not found in `&ChessGame`

error: aborting due to 3 previous errors; 2 warnings emitted

Some errors have detailed explanations: E0271, E0277, E0599.
For more information about an error, try `rustc --explain E0271`.
error: could not compile `solution`

To learn more, run the command again with --verbose.


warning: unused import: `core::convert::TryInto`
 --> src/solution.rs:2:5
  |
2 | use core::convert::TryInto;
  |     ^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::any`
 --> src/solution.rs:3:5
  |
3 | use std::any;
  |     ^^^^^^^^

warning: unnecessary trailing semicolon
  --> src/main.rs:53:43
   |
53 |         game.make_move(src, dst).unwrap();;
   |                                           ^ help: remove this semicolon
   |
   = note: `#[warn(redundant_semicolons)]` on by default

error[E0271]: type mismatch resolving `<&Position as TryFrom<&str>>::Error == solution::Error`
  --> src/main.rs:14:66
   |
14 |             let position = format!("{}{}", column, row).as_str().try_into()?;
   |                                                                  ^^^^^^^^ expected enum `Infallible`, found enum `solution::Error`

error[E0277]: the trait bound `&Position: From<&str>` is not satisfied
  --> src/main.rs:14:66
   |
14 |             let position = format!("{}{}", column, row).as_str().try_into()?;
   |                                                                  ^^^^^^^^ the trait `From<&str>` is not implemented for `&Position`
   |
   = note: required because of the requirements on the impl of `Into<&Position>` for `&str`
   = note: required because of the requirements on the impl of `TryFrom<&str>` for `&Position`
   = note: required because of the requirements on the impl of `TryInto<&Position>` for `&str`

error[E0599]: no method named `current_player` found for reference `&ChessGame` in the current scope
  --> src/main.rs:36:27
   |
36 |     let turn = match game.current_player() {
   |                           ^^^^^^^^^^^^^^ method not found in `&ChessGame`

error[E0277]: the trait bound `&Position: From<&str>` is not satisfied
  --> src/main.rs:51:23
   |
51 |         let src = src.try_into().unwrap();
   |                       ^^^^^^^^ the trait `From<&str>` is not implemented for `&Position`
   |
   = note: required because of the requirements on the impl of `Into<&Position>` for `&str`
   = note: required because of the requirements on the impl of `TryFrom<&str>` for `&Position`
   = note: required because of the requirements on the impl of `TryInto<&Position>` for `&str`

error[E0277]: the trait bound `&Position: From<&str>` is not satisfied
  --> src/main.rs:52:23
   |
52 |         let dst = dst.try_into().unwrap();
   |                       ^^^^^^^^ the trait `From<&str>` is not implemented for `&Position`
   |
   = note: required because of the requirements on the impl of `Into<&Position>` for `&str`
   = note: required because of the requirements on the impl of `TryFrom<&str>` for `&Position`
   = note: required because of the requirements on the impl of `TryInto<&Position>` for `&str`

error: aborting due to 5 previous errors; 3 warnings emitted

Some errors have detailed explanations: E0271, E0277, E0599.
For more information about an error, try `rustc --explain E0271`.
error: could not compile `solution`

To learn more, run the command again with --verbose.


warning: unused import: `core::convert::TryInto`
 --> src/solution.rs:2:5
  |
2 | use core::convert::TryInto;
  |     ^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::any`
 --> src/solution.rs:3:5
  |
3 | use std::any;
  |     ^^^^^^^^

error[E0271]: type mismatch resolving `<&Position as TryFrom<&str>>::Error == solution::Error`
  --> src/main.rs:14:66
   |
14 |             let position = format!("{}{}", column, row).as_str().try_into()?;
   |                                                                  ^^^^^^^^ expected enum `Infallible`, found enum `solution::Error`

error[E0277]: the trait bound `&Position: From<&str>` is not satisfied
  --> src/main.rs:14:66
   |
14 |             let position = format!("{}{}", column, row).as_str().try_into()?;
   |                                                                  ^^^^^^^^ the trait `From<&str>` is not implemented for `&Position`
   |
   = note: required because of the requirements on the impl of `Into<&Position>` for `&str`
   = note: required because of the requirements on the impl of `TryFrom<&str>` for `&Position`
   = note: required because of the requirements on the impl of `TryInto<&Position>` for `&str`

error[E0599]: no method named `current_player` found for reference `&ChessGame` in the current scope
  --> src/main.rs:36:27
   |
36 |     let turn = match game.current_player() {
   |                           ^^^^^^^^^^^^^^ method not found in `&ChessGame`

error[E0277]: the trait bound `&Position: From<&str>` is not satisfied
  --> src/main.rs:61:23
   |
61 |         let src = src.try_into().unwrap();
   |                       ^^^^^^^^ the trait `From<&str>` is not implemented for `&Position`
   |
   = note: required because of the requirements on the impl of `Into<&Position>` for `&str`
   = note: required because of the requirements on the impl of `TryFrom<&str>` for `&Position`
   = note: required because of the requirements on the impl of `TryInto<&Position>` for `&str`

error[E0277]: the trait bound `&Position: From<&str>` is not satisfied
  --> src/main.rs:62:23
   |
62 |         let dst = dst.try_into().unwrap();
   |                       ^^^^^^^^ the trait `From<&str>` is not implemented for `&Position`
   |
   = note: required because of the requirements on the impl of `Into<&Position>` for `&str`
   = note: required because of the requirements on the impl of `TryFrom<&str>` for `&Position`
   = note: required because of the requirements on the impl of `TryInto<&Position>` for `&str`

error: aborting due to 5 previous errors; 2 warnings emitted

Some errors have detailed explanations: E0271, E0277, E0599.
For more information about an error, try `rustc --explain E0271`.
error: could not compile `solution`

To learn more, run the command again with --verbose.


warning: unused import: `core::convert::TryInto`
 --> src/solution.rs:2:5
  |
2 | use core::convert::TryInto;
  |     ^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::any`
 --> src/solution.rs:3:5
  |
3 | use std::any;
  |     ^^^^^^^^

error[E0271]: type mismatch resolving `<&Position as TryFrom<&str>>::Error == solution::Error`
  --> src/main.rs:14:66
   |
14 |             let position = format!("{}{}", column, row).as_str().try_into()?;
   |                                                                  ^^^^^^^^ expected enum `Infallible`, found enum `solution::Error`

error[E0277]: the trait bound `&Position: From<&str>` is not satisfied
  --> src/main.rs:14:66
   |
14 |             let position = format!("{}{}", column, row).as_str().try_into()?;
   |                                                                  ^^^^^^^^ the trait `From<&str>` is not implemented for `&Position`
   |
   = note: required because of the requirements on the impl of `Into<&Position>` for `&str`
   = note: required because of the requirements on the impl of `TryFrom<&str>` for `&Position`
   = note: required because of the requirements on the impl of `TryInto<&Position>` for `&str`

error[E0599]: no method named `current_player` found for reference `&ChessGame` in the current scope
  --> src/main.rs:36:27
   |
36 |     let turn = match game.current_player() {
   |                           ^^^^^^^^^^^^^^ method not found in `&ChessGame`

error[E0277]: the trait bound `&Position: From<&str>` is not satisfied
  --> src/main.rs:68:25
   |
68 |             let s = src.try_into().unwrap();
   |                         ^^^^^^^^ the trait `From<&str>` is not implemented for `&Position`
   |
   = note: required because of the requirements on the impl of `Into<&Position>` for `&str`
   = note: required because of the requirements on the impl of `TryFrom<&str>` for `&Position`
   = note: required because of the requirements on the impl of `TryInto<&Position>` for `&str`

error[E0277]: the trait bound `&Position: From<&str>` is not satisfied
  --> src/main.rs:69:25
   |
69 |             let d = dst.try_into().unwrap();
   |                         ^^^^^^^^ the trait `From<&str>` is not implemented for `&Position`
   |
   = note: required because of the requirements on the impl of `Into<&Position>` for `&str`
   = note: required because of the requirements on the impl of `TryFrom<&str>` for `&Position`
   = note: required because of the requirements on the impl of `TryInto<&Position>` for `&str`

error[E0277]: the trait bound `&Position: From<&str>` is not satisfied
  --> src/main.rs:72:21
   |
72 |         let s = src.try_into().unwrap();
   |                     ^^^^^^^^ the trait `From<&str>` is not implemented for `&Position`
   |
   = note: required because of the requirements on the impl of `Into<&Position>` for `&str`
   = note: required because of the requirements on the impl of `TryFrom<&str>` for `&Position`
   = note: required because of the requirements on the impl of `TryInto<&Position>` for `&str`

error[E0277]: the trait bound `&Position: From<&str>` is not satisfied
  --> src/main.rs:73:21
   |
73 |         let d = dst.try_into().unwrap();
   |                     ^^^^^^^^ the trait `From<&str>` is not implemented for `&Position`
   |
   = note: required because of the requirements on the impl of `Into<&Position>` for `&str`
   = note: required because of the requirements on the impl of `TryFrom<&str>` for `&Position`
   = note: required because of the requirements on the impl of `TryInto<&Position>` for `&str`

error: aborting due to 7 previous errors; 2 warnings emitted

Some errors have detailed explanations: E0271, E0277, E0599.
For more information about an error, try `rustc --explain E0271`.
error: could not compile `solution`

To learn more, run the command again with --verbose.